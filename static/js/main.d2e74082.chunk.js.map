{"version":3,"sources":["store/types.ts","store/actions/alertActions.ts","components/Search.tsx","store/actions/weatherActions.ts","components/Alert.tsx","components/Weather.tsx","App.tsx","store/reducers/weatherReducer.ts","store/reducers/alertReducer.ts","store/index.ts","index.tsx"],"names":["GET_WEATHER","SET_LOADING","SET_ERROR","SET_ALERT","setAlert","message","type","payload","Search","title","useState","city","setCity","dispatch","useDispatch","className","onSubmit","e","preventDefault","trim","a","fetch","process","res","ok","json","resData","Error","getWeather","placeholder","style","maxWidth","value","onChange","currentTarget","margin","Alert","onClose","justifyContent","onClick","Weather","data","fahrenheit","main","temp","toFixed","celsius","marginBottom","name","sys","country","timezone","alignItems","weather","description","src","icon","alt","humidity","pressure","wind","speed","App","weatherData","useSelector","state","loading","error","alertMessage","alert","initialState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2e74082.chunk.js","sourcesContent":["export const GET_WEATHER = 'GET_WEATHER';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const SET_ERROR = 'SET_ERROR';\r\nexport const SET_ALERT = 'SET_ALERT';\r\n\r\nexport interface Weather {\r\n  description: string;\r\n  icon: string;\r\n  id: number;\r\n  main: string;\r\n}\r\n\r\nexport interface WeatherData {\r\n  base: string;\r\n  clouds: {\r\n    all: number;\r\n  };\r\n  cod: number;\r\n  coord: {\r\n    lon: number;\r\n    lat: number;\r\n  };\r\n  dt: number;\r\n  id: number;\r\n  main: {\r\n    feels_like: number;\r\n    humidity: number;\r\n    pressure: number;\r\n    temp: number;\r\n    temp_max: number;\r\n    temp_min: number;\r\n  };\r\n  name: string;\r\n  sys: {\r\n    country: string;\r\n    id: number;\r\n    sunrise: number;\r\n    sunset: number;\r\n    type: number;\r\n  };\r\n  timezone: number;\r\n  visibility: number;\r\n  weather: Weather[];\r\n  wind: {\r\n    speed: number;\r\n    deg: number;\r\n  };\r\n}\r\n\r\nexport interface WeatherError {\r\n  cod: string;\r\n  message: string;\r\n}\r\n\r\nexport interface WeatherState {\r\n  data: WeatherData | null;\r\n  loading: boolean;\r\n  error: string;\r\n}\r\n\r\ninterface GetWeatherAction {\r\n  type: typeof GET_WEATHER;\r\n  payload: WeatherData;\r\n}\r\n\r\ninterface SetLoadingAction {\r\n  type: typeof SET_LOADING;\r\n}\r\n\r\ninterface SetErrorAction {\r\n  type: typeof SET_ERROR;\r\n  payload: string;\r\n}\r\n\r\nexport type WeatherAction = GetWeatherAction | SetLoadingAction | SetErrorAction;\r\n\r\nexport interface AlertAction {\r\n  type: typeof SET_ALERT;\r\n  payload: string;\r\n}\r\n\r\nexport interface AlertState {\r\n  message: string;\r\n}","import { SET_ALERT, AlertAction } from \"../types\";\r\n\r\nexport const setAlert = (message: string): AlertAction => ({type: SET_ALERT, payload: message});","import React, { FC, FormEvent, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { setAlert } from \"../store/actions/alertActions\";\r\nimport { getWeather, setLoading } from \"../store/actions/weatherActions\";\r\n\r\n\r\ntype SearchProps = {\r\n  title: string,\r\n}\r\n\r\nconst Search: FC<SearchProps> = ({title}) => {\r\n  const [city, setCity] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e: FormEvent<HTMLInputElement>) => {\r\n    setCity(e.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (city.trim() === \"\") {\r\n      return dispatch(setAlert(\"City is required!\"));\r\n    }\r\n\r\n    dispatch(setLoading());\r\n    dispatch(getWeather(city));\r\n    setCity(\"\");\r\n  };\r\n  return (\r\n    <div className=\"hero is-black has-text-centered\">\r\n      <div className=\"hero-body\">\r\n        <div className=\"container\">\r\n          <h1 className=\"title\">{title}</h1>\r\n          <form className=\"py-5\" onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              className=\"input has-text-centered mb-2\"\r\n              placeholder=\"Enter city name\"\r\n              style={{maxWidth: 300}}\r\n              value={city}\r\n              onChange={handleChange}\r\n            />\r\n            <button className=\"button is-link is-fullwidth\" style={{maxWidth: 300, margin: \"0 auto\"}}>Search</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;","import { ThunkAction } from \"redux-thunk\";\r\nimport { RootState } from \"..\";\r\nimport { WeatherAction, WeatherData, WeatherError, GET_WEATHER, SET_LOADING, SET_ERROR } from \"../types\";\r\n\r\nexport const getWeather = (city: string): ThunkAction<void, RootState, null, WeatherAction> => {\r\n  return async dispatch => {\r\n    try {\r\n      const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_API_KEY}`);\r\n\r\n      if (!res.ok) {\r\n        const resData: WeatherError = await res.json();\r\n        throw new Error(resData.message);\r\n      }\r\n\r\n      const resData: WeatherData = await res.json();\r\n      dispatch({\r\n        type: GET_WEATHER,\r\n        payload: resData\r\n      });\r\n    } catch (err: any) {\r\n      dispatch({\r\n        type: SET_ERROR,\r\n        payload: err.message\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setLoading = (): WeatherAction => ({type: SET_LOADING});\r\n\r\nexport const setError = (): WeatherAction => ({type: SET_ERROR, payload: \"\"});","import React, { FC } from \"react\";\r\n\r\ntype AlertProps = {\r\n  message: string;\r\n  onClose: () => void\r\n}\r\n\r\nconst Alert: FC<AlertProps> = ({message, onClose}) => {\r\n  return (\r\n    <div className=\"modal is-active has-text-centered\">\r\n      <div className=\"modal-background\"></div>\r\n      <div className=\"modal-card\">\r\n        <header className=\"modal-card-head has-background-danger\">\r\n          <p className=\"modal-card-title has-text-white\">{message}</p>\r\n        </header>\r\n        <footer className=\"modal-card-foot\" style={{justifyContent: \"center\"}}>\r\n          <button className=\"button\" onClick={onClose}>Close</button>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;","import React, { FC } from \"react\";\r\nimport { WeatherData } from \"../store/types\";\r\n\r\ntype WeatherProps = {\r\n  data: WeatherData\r\n}\r\n\r\nconst Weather: FC<WeatherProps> = ({data}) => {\r\n  const fahrenheit = (data.main.temp * 1.8 - 459.67).toFixed(2);\r\n  const celsius = (data.main.temp - 273.15).toFixed(2);\r\n\r\n  return (\r\n    <section className=\"section\">\r\n      <div className=\"container\">\r\n        <h1 className=\"title has-text-centered\" style={{marginBottom: 50}}>{data.name} - {data.sys.country} -\r\n          MSK+{data.timezone / 60 / 60 - 3}</h1>\r\n        <div className=\"level\" style={{alignItems: \"flex-start\"}}>\r\n          <div className=\"level-item has-text-centered\">\r\n            <div>\r\n              <p className=\"heading\">{data.weather[0].description}</p>\r\n              <p className=\"title\"><img src={`https://openweathermap.org/img/wn/${data.weather[0].icon}.png`} alt=\"\"/>\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"level-item has-text-centered\">\r\n            <div>\r\n              <p className=\"heading\">temp</p>\r\n              <div className=\"title\">\r\n                <p className=\"mb-2\">{data.main.temp}K</p>\r\n                <p className=\"mb-2\">{fahrenheit}<sup>&#8457;</sup></p>\r\n                <p>{celsius}<sup>&#8451;</sup></p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"level-item has-text-centered\">\r\n            <div>\r\n              <p className=\"heading\">humidity</p>\r\n              <p className=\"title\">{data.main.humidity}%</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"level-item has-text-centered\">\r\n            <div>\r\n              <p className=\"heading\">pressure</p>\r\n              <p className=\"title\">{data.main.pressure}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"level-item has-text-centered\">\r\n            <div>\r\n              <p className=\"heading\">wind</p>\r\n              <p className=\"title\">{data.wind.speed}<small> m/s</small></p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Weather;","import React, { FC } from \"react\";\nimport \"./App.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { RootState } from \"./store\";\nimport Search from \"./components/Search\";\nimport Alert from \"./components/Alert\";\nimport Weather from \"./components/Weather\";\nimport { setAlert } from \"./store/actions/alertActions\";\nimport { setError } from \"./store/actions/weatherActions\";\n\nconst App: FC = () => {\n  const dispatch = useDispatch();\n  const weatherData = useSelector((state: RootState) => state.weather.data);\n  const loading = useSelector((state: RootState) => state.weather.loading);\n  const error = useSelector((state: RootState) => state.weather.error);\n  const alertMessage = useSelector((state: RootState) => state.alert.message);\n\n  return (\n    <div className=\"has-text-centered\">\n      <Search title=\"Enter city name and press the button\"/>\n      {loading ? <h2 className=\"is-size-3 py-2\">Loading...</h2> : weatherData && <Weather data={weatherData}/>}\n      {alertMessage && <Alert message={alertMessage} onClose={() => dispatch(setAlert(\"\"))}/>}\n      {error && <Alert message={error} onClose={() => dispatch(setError())}/>}\n    </div>\n  );\n};\n\nexport default App;","import { WeatherState, WeatherAction, GET_WEATHER, SET_LOADING, SET_ERROR } from \"../types\";\r\n\r\nconst initialState: WeatherState = {\r\n  data: null,\r\n  loading: false,\r\n  error: \"\"\r\n};\r\n\r\nexport default (state = initialState, action: WeatherAction): WeatherState => {\r\n  switch (action.type) {\r\n    case GET_WEATHER:\r\n      return {\r\n        data: action.payload,\r\n        loading: false,\r\n        error: \"\"\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { AlertAction, AlertState, SET_ALERT } from \"../types\";\r\n\r\nconst initialState: AlertState = {\r\n  message: \"\"\r\n};\r\n\r\nexport default (state = initialState, action: AlertAction): AlertState => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return {\r\n        message: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport weatherReducer from \"./reducers/weatherReducer\";\r\nimport alertReducer from \"./reducers/alertReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  weather: weatherReducer,\r\n  alert: alertReducer\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport '../node_modules/bulma/css/bulma.min.css'\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\n"],"sourceRoot":""}